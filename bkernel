// PL011 UART registers (QEMU virt machine)
#define UART0_BASE 0x09000000
#define UART0_DR   (volatile unsigned int *)(UART0_BASE + 0x00)
#define UART0_FR   (volatile unsigned int *)(UART0_BASE + 0x18)
/*void kernel_main() {
    uart_init();
    ahci_init();
    ext2_init();
    
    // Execute lcl from disk
    void *lcl_binary = load_file("/bin/lcl");
    void (*lcl_entry)() = (void(*)())lcl_binary;
    lcl_entry();
}*/

void uart_putc(char c) {
    // Wait until UART is ready
    while (*UART0_FR & 0x20);
    *UART0_DR = c;
}

void print(const char *str) {
    while (*str) {
        uart_putc(*str++);
    }
}

/*void main() {
    print("Hello, ARM64 Kernel World!\r\n");
    
    // Halt
    while(1);
}*/
void kernel_main() {
    // Initialize hardware
    uart_init();
    uart_puts("Initializing storage...\n");
    
    // Initialize storage driver
    ahci_init();
    
    // Mount filesystem
    uart_puts("Mounting filesystem...\n");
    vfs_mount("ext2", 0);
    
    // Launch custom shell
    uart_puts("Starting LCL...\n");
    lcl_main();
    
    // Should never reach here
    while(1);
}
